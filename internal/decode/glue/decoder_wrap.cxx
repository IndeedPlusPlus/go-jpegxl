/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: decoder.i

#define SWIGMODULE glue

#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>



typedef long long intgo;
typedef unsigned long long uintgo;


# if !defined(__clang__) && (defined(__i386__) || defined(__x86_64__))
#   define SWIGSTRUCTPACKED __attribute__((__packed__, __gcc_struct__))
# else
#   define SWIGSTRUCTPACKED __attribute__((__packed__))
# endif



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;




#define swiggo_size_assert_eq(x, y, name) typedef char name[(x-y)*(x-y)*-2+1];
#define swiggo_size_assert(t, n) swiggo_size_assert_eq(sizeof(t), n, swiggo_sizeof_##t##_is_not_##n)

swiggo_size_assert(char, 1)
swiggo_size_assert(short, 2)
swiggo_size_assert(int, 4)
typedef long long swiggo_long_long;
swiggo_size_assert(swiggo_long_long, 8)
swiggo_size_assert(float, 4)
swiggo_size_assert(double, 8)

#ifdef __cplusplus
extern "C" {
#endif
extern void crosscall2(void (*fn)(void *, int), void *, int);
extern char* _cgo_topofstack(void) __attribute__ ((weak));
extern void _cgo_allocate(void *, int);
extern void _cgo_panic(void *, int);
#ifdef __cplusplus
}
#endif

static char *_swig_topofstack() {
  if (_cgo_topofstack) {
    return _cgo_topofstack();
  } else {
    return 0;
  }
}

static void _swig_gopanic(const char *p) {
  struct {
    const char *p;
  } SWIGSTRUCTPACKED a;
  a.p = p;
  crosscall2(_cgo_panic, &a, (int) sizeof a);
}




#define SWIG_contract_assert(expr, msg) \
  if (!(expr)) { _swig_gopanic(msg); } else


static void Swig_free(void* p) {
  free(p);
}

static void* Swig_malloc(int c) {
  return malloc(c);
}


#include <jxl/decode.h>



#include <stdint.h>		// Use the C99 official header

#ifdef __cplusplus
extern "C" {
#endif

void _wrap_Swig_free_glue_5245479e8dc75ce4(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  Swig_free(arg1);
  
}


void *_wrap_Swig_malloc_glue_5245479e8dc75ce4(intgo _swig_go_0) {
  int arg1 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (void *)Swig_malloc(arg1);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


intgo _wrap_JXL_TYPE_FLOAT_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_TYPE_FLOAT;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_TYPE_BOOLEAN_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_TYPE_BOOLEAN;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_TYPE_UINT8_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_TYPE_UINT8;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_TYPE_UINT16_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_TYPE_UINT16;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_TYPE_UINT32_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_TYPE_UINT32;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_TYPE_FLOAT16_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_TYPE_FLOAT16;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_NATIVE_ENDIAN_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_NATIVE_ENDIAN;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_LITTLE_ENDIAN_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_LITTLE_ENDIAN;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_BIG_ENDIAN_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_BIG_ENDIAN;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlPixelFormat_num_channels_set_glue_5245479e8dc75ce4(JxlPixelFormat *_swig_go_0, intgo _swig_go_1) {
  JxlPixelFormat *arg1 = (JxlPixelFormat *) 0 ;
  uint32_t arg2 ;
  
  arg1 = *(JxlPixelFormat **)&_swig_go_0; 
  arg2 = (uint32_t)_swig_go_1; 
  
  if (arg1) (arg1)->num_channels = arg2;
  
}


intgo _wrap_JxlPixelFormat_num_channels_get_glue_5245479e8dc75ce4(JxlPixelFormat *_swig_go_0) {
  JxlPixelFormat *arg1 = (JxlPixelFormat *) 0 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = *(JxlPixelFormat **)&_swig_go_0; 
  
  result = (uint32_t) ((arg1)->num_channels);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlPixelFormat_data_type_set_glue_5245479e8dc75ce4(JxlPixelFormat *_swig_go_0, intgo _swig_go_1) {
  JxlPixelFormat *arg1 = (JxlPixelFormat *) 0 ;
  JxlDataType arg2 ;
  
  arg1 = *(JxlPixelFormat **)&_swig_go_0; 
  arg2 = (JxlDataType)_swig_go_1; 
  
  if (arg1) (arg1)->data_type = arg2;
  
}


intgo _wrap_JxlPixelFormat_data_type_get_glue_5245479e8dc75ce4(JxlPixelFormat *_swig_go_0) {
  JxlPixelFormat *arg1 = (JxlPixelFormat *) 0 ;
  JxlDataType result;
  intgo _swig_go_result;
  
  arg1 = *(JxlPixelFormat **)&_swig_go_0; 
  
  result = (JxlDataType) ((arg1)->data_type);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_JxlPixelFormat_endianness_set_glue_5245479e8dc75ce4(JxlPixelFormat *_swig_go_0, intgo _swig_go_1) {
  JxlPixelFormat *arg1 = (JxlPixelFormat *) 0 ;
  JxlEndianness arg2 ;
  
  arg1 = *(JxlPixelFormat **)&_swig_go_0; 
  arg2 = (JxlEndianness)_swig_go_1; 
  
  if (arg1) (arg1)->endianness = arg2;
  
}


intgo _wrap_JxlPixelFormat_endianness_get_glue_5245479e8dc75ce4(JxlPixelFormat *_swig_go_0) {
  JxlPixelFormat *arg1 = (JxlPixelFormat *) 0 ;
  JxlEndianness result;
  intgo _swig_go_result;
  
  arg1 = *(JxlPixelFormat **)&_swig_go_0; 
  
  result = (JxlEndianness) ((arg1)->endianness);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_JxlPixelFormat_align_set_glue_5245479e8dc75ce4(JxlPixelFormat *_swig_go_0, long long _swig_go_1) {
  JxlPixelFormat *arg1 = (JxlPixelFormat *) 0 ;
  size_t arg2 ;
  
  arg1 = *(JxlPixelFormat **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  if (arg1) (arg1)->align = arg2;
  
}


long long _wrap_JxlPixelFormat_align_get_glue_5245479e8dc75ce4(JxlPixelFormat *_swig_go_0) {
  JxlPixelFormat *arg1 = (JxlPixelFormat *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(JxlPixelFormat **)&_swig_go_0; 
  
  result =  ((arg1)->align);
  _swig_go_result = result; 
  return _swig_go_result;
}


JxlPixelFormat *_wrap_new_JxlPixelFormat_glue_5245479e8dc75ce4() {
  JxlPixelFormat *result = 0 ;
  JxlPixelFormat *_swig_go_result;
  
  
  result = (JxlPixelFormat *)new JxlPixelFormat();
  *(JxlPixelFormat **)&_swig_go_result = (JxlPixelFormat *)result; 
  return _swig_go_result;
}


void _wrap_delete_JxlPixelFormat_glue_5245479e8dc75ce4(JxlPixelFormat *_swig_go_0) {
  JxlPixelFormat *arg1 = (JxlPixelFormat *) 0 ;
  
  arg1 = *(JxlPixelFormat **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_JxlDecoderVersion_glue_5245479e8dc75ce4() {
  uint32_t result;
  intgo _swig_go_result;
  
  
  result = (uint32_t)JxlDecoderVersion();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_SIG_NOT_ENOUGH_BYTES_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_SIG_NOT_ENOUGH_BYTES;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_SIG_INVALID_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_SIG_INVALID;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_SIG_CODESTREAM_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_SIG_CODESTREAM;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_SIG_CONTAINER_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_SIG_CONTAINER;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JxlSignatureCheck_glue_5245479e8dc75ce4(char *_swig_go_0, long long _swig_go_1) {
  uint8_t *arg1 = (uint8_t *) 0 ;
  size_t arg2 ;
  JxlSignature result;
  intgo _swig_go_result;
  
  arg1 = *(uint8_t **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  result = (JxlSignature)JxlSignatureCheck((unsigned char const *)arg1,arg2);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


JxlDecoderStruct *_wrap_JxlDecoderCreate_glue_5245479e8dc75ce4(JxlMemoryManager *_swig_go_0) {
  JxlMemoryManager *arg1 = (JxlMemoryManager *) 0 ;
  JxlDecoder *result = 0 ;
  JxlDecoderStruct *_swig_go_result;
  
  arg1 = *(JxlMemoryManager **)&_swig_go_0; 
  
  result = (JxlDecoder *)JxlDecoderCreate((JxlMemoryManager const *)arg1);
  *(JxlDecoder **)&_swig_go_result = (JxlDecoder *)result; 
  return _swig_go_result;
}


void _wrap_JxlDecoderReset_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  
  JxlDecoderReset(arg1);
  
}


void _wrap_JxlDecoderDestroy_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  
  JxlDecoderDestroy(arg1);
  
}


intgo _wrap_JXL_DEC_SUCCESS_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_DEC_SUCCESS;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_DEC_ERROR_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_DEC_ERROR;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_DEC_NEED_MORE_INPUT_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_DEC_NEED_MORE_INPUT;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_DEC_NEED_PREVIEW_OUT_BUFFER_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_DEC_NEED_PREVIEW_OUT_BUFFER;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_DEC_NEED_DC_OUT_BUFFER_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_DEC_NEED_DC_OUT_BUFFER;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_DEC_NEED_IMAGE_OUT_BUFFER_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_DEC_NEED_IMAGE_OUT_BUFFER;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_DEC_JPEG_NEED_MORE_OUTPUT_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_DEC_JPEG_NEED_MORE_OUTPUT;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_DEC_BASIC_INFO_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_DEC_BASIC_INFO;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_DEC_EXTENSIONS_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_DEC_EXTENSIONS;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_DEC_COLOR_ENCODING_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_DEC_COLOR_ENCODING;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_DEC_PREVIEW_IMAGE_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_DEC_PREVIEW_IMAGE;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_DEC_FRAME_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_DEC_FRAME;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_DEC_DC_IMAGE_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_DEC_DC_IMAGE;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_DEC_FULL_IMAGE_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_DEC_FULL_IMAGE;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_DEC_JPEG_RECONSTRUCTION_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_DEC_JPEG_RECONSTRUCTION;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlDecoderRewind_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  
  JxlDecoderRewind(arg1);
  
}


void _wrap_JxlDecoderSkipFrames_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0, long long _swig_go_1) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  size_t arg2 ;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  JxlDecoderSkipFrames(arg1,arg2);
  
}


intgo _wrap_JxlDecoderDefaultPixelFormat_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0, JxlPixelFormat *_swig_go_1) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  JxlPixelFormat *arg2 = (JxlPixelFormat *) 0 ;
  JxlDecoderStatus result;
  intgo _swig_go_result;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  arg2 = *(JxlPixelFormat **)&_swig_go_1; 
  
  result = (JxlDecoderStatus)JxlDecoderDefaultPixelFormat((JxlDecoderStruct const *)arg1,arg2);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_JxlDecoderSetParallelRunner_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0, JxlParallelRunner *_swig_go_1, void *_swig_go_2) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  JxlParallelRunner arg2 ;
  void *arg3 = (void *) 0 ;
  JxlParallelRunner *argp2 ;
  JxlDecoderStatus result;
  intgo _swig_go_result;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  
  argp2 = (JxlParallelRunner *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null JxlParallelRunner");
  }
  arg2 = (JxlParallelRunner)*argp2;
  
  arg3 = *(void **)&_swig_go_2; 
  
  result = (JxlDecoderStatus)JxlDecoderSetParallelRunner(arg1,arg2,arg3);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


long long _wrap_JxlDecoderSizeHintBasicInfo_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  
  result = JxlDecoderSizeHintBasicInfo((JxlDecoderStruct const *)arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JxlDecoderSubscribeEvents_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0, intgo _swig_go_1) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  int arg2 ;
  JxlDecoderStatus result;
  intgo _swig_go_result;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (JxlDecoderStatus)JxlDecoderSubscribeEvents(arg1,arg2);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_JxlDecoderSetKeepOrientation_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0, intgo _swig_go_1) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  int arg2 ;
  JxlDecoderStatus result;
  intgo _swig_go_result;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (JxlDecoderStatus)JxlDecoderSetKeepOrientation(arg1,arg2);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_JxlDecoderProcessInput_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  JxlDecoderStatus result;
  intgo _swig_go_result;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  
  result = (JxlDecoderStatus)JxlDecoderProcessInput(arg1);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_JxlDecoderSetInput_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0, char *_swig_go_1, long long _swig_go_2) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  uint8_t *arg2 = (uint8_t *) 0 ;
  size_t arg3 ;
  JxlDecoderStatus result;
  intgo _swig_go_result;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  arg2 = *(uint8_t **)&_swig_go_1; 
  arg3 = (size_t)_swig_go_2; 
  
  result = (JxlDecoderStatus)JxlDecoderSetInput(arg1,(unsigned char const *)arg2,arg3);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


long long _wrap_JxlDecoderReleaseInput_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  
  result = JxlDecoderReleaseInput(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JxlDecoderGetBasicInfo_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0, JxlBasicInfo *_swig_go_1) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  JxlBasicInfo *arg2 = (JxlBasicInfo *) 0 ;
  JxlDecoderStatus result;
  intgo _swig_go_result;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  arg2 = *(JxlBasicInfo **)&_swig_go_1; 
  
  result = (JxlDecoderStatus)JxlDecoderGetBasicInfo((JxlDecoderStruct const *)arg1,arg2);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_JxlDecoderGetExtraChannelInfo_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0, long long _swig_go_1, JxlExtraChannelInfo *_swig_go_2) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  size_t arg2 ;
  JxlExtraChannelInfo *arg3 = (JxlExtraChannelInfo *) 0 ;
  JxlDecoderStatus result;
  intgo _swig_go_result;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  arg3 = *(JxlExtraChannelInfo **)&_swig_go_2; 
  
  result = (JxlDecoderStatus)JxlDecoderGetExtraChannelInfo((JxlDecoderStruct const *)arg1,arg2,arg3);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_JxlDecoderGetExtraChannelName_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0, long long _swig_go_1, _gostring_ _swig_go_2, long long _swig_go_3) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  size_t arg2 ;
  char *arg3 = (char *) 0 ;
  size_t arg4 ;
  JxlDecoderStatus result;
  intgo _swig_go_result;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = (size_t)_swig_go_3; 
  
  result = (JxlDecoderStatus)JxlDecoderGetExtraChannelName((JxlDecoderStruct const *)arg1,arg2,arg3,arg4);
  _swig_go_result = (intgo)result; 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_JXL_COLOR_PROFILE_TARGET_ORIGINAL_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_COLOR_PROFILE_TARGET_ORIGINAL;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_COLOR_PROFILE_TARGET_DATA_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_COLOR_PROFILE_TARGET_DATA;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JxlDecoderGetColorAsEncodedProfile_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0, JxlPixelFormat *_swig_go_1, intgo _swig_go_2, JxlColorEncoding *_swig_go_3) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  JxlPixelFormat *arg2 = (JxlPixelFormat *) 0 ;
  JxlColorProfileTarget arg3 ;
  JxlColorEncoding *arg4 = (JxlColorEncoding *) 0 ;
  JxlDecoderStatus result;
  intgo _swig_go_result;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  arg2 = *(JxlPixelFormat **)&_swig_go_1; 
  arg3 = (JxlColorProfileTarget)_swig_go_2; 
  arg4 = *(JxlColorEncoding **)&_swig_go_3; 
  
  result = (JxlDecoderStatus)JxlDecoderGetColorAsEncodedProfile((JxlDecoderStruct const *)arg1,(JxlPixelFormat const *)arg2,arg3,arg4);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_JxlDecoderGetICCProfileSize_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0, JxlPixelFormat *_swig_go_1, intgo _swig_go_2, long long *_swig_go_3) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  JxlPixelFormat *arg2 = (JxlPixelFormat *) 0 ;
  JxlColorProfileTarget arg3 ;
  size_t *arg4 = (size_t *) 0 ;
  JxlDecoderStatus result;
  intgo _swig_go_result;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  arg2 = *(JxlPixelFormat **)&_swig_go_1; 
  arg3 = (JxlColorProfileTarget)_swig_go_2; 
  arg4 = *(size_t **)&_swig_go_3; 
  
  result = (JxlDecoderStatus)JxlDecoderGetICCProfileSize((JxlDecoderStruct const *)arg1,(JxlPixelFormat const *)arg2,arg3,arg4);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_JxlDecoderGetColorAsICCProfile_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0, JxlPixelFormat *_swig_go_1, intgo _swig_go_2, char *_swig_go_3, long long _swig_go_4) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  JxlPixelFormat *arg2 = (JxlPixelFormat *) 0 ;
  JxlColorProfileTarget arg3 ;
  uint8_t *arg4 = (uint8_t *) 0 ;
  size_t arg5 ;
  JxlDecoderStatus result;
  intgo _swig_go_result;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  arg2 = *(JxlPixelFormat **)&_swig_go_1; 
  arg3 = (JxlColorProfileTarget)_swig_go_2; 
  arg4 = *(uint8_t **)&_swig_go_3; 
  arg5 = (size_t)_swig_go_4; 
  
  result = (JxlDecoderStatus)JxlDecoderGetColorAsICCProfile((JxlDecoderStruct const *)arg1,(JxlPixelFormat const *)arg2,arg3,arg4,arg5);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_JxlDecoderSetPreferredColorProfile_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0, JxlColorEncoding *_swig_go_1) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  JxlColorEncoding *arg2 = (JxlColorEncoding *) 0 ;
  JxlDecoderStatus result;
  intgo _swig_go_result;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  arg2 = *(JxlColorEncoding **)&_swig_go_1; 
  
  result = (JxlDecoderStatus)JxlDecoderSetPreferredColorProfile(arg1,(JxlColorEncoding const *)arg2);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_JxlDecoderPreviewOutBufferSize_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0, JxlPixelFormat *_swig_go_1, long long *_swig_go_2) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  JxlPixelFormat *arg2 = (JxlPixelFormat *) 0 ;
  size_t *arg3 = (size_t *) 0 ;
  JxlDecoderStatus result;
  intgo _swig_go_result;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  arg2 = *(JxlPixelFormat **)&_swig_go_1; 
  arg3 = *(size_t **)&_swig_go_2; 
  
  result = (JxlDecoderStatus)JxlDecoderPreviewOutBufferSize((JxlDecoderStruct const *)arg1,(JxlPixelFormat const *)arg2,arg3);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_JxlDecoderSetPreviewOutBuffer_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0, JxlPixelFormat *_swig_go_1, void *_swig_go_2, long long _swig_go_3) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  JxlPixelFormat *arg2 = (JxlPixelFormat *) 0 ;
  void *arg3 = (void *) 0 ;
  size_t arg4 ;
  JxlDecoderStatus result;
  intgo _swig_go_result;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  arg2 = *(JxlPixelFormat **)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (size_t)_swig_go_3; 
  
  result = (JxlDecoderStatus)JxlDecoderSetPreviewOutBuffer(arg1,(JxlPixelFormat const *)arg2,arg3,arg4);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_JxlDecoderGetFrameHeader_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0, JxlFrameHeader *_swig_go_1) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  JxlFrameHeader *arg2 = (JxlFrameHeader *) 0 ;
  JxlDecoderStatus result;
  intgo _swig_go_result;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  arg2 = *(JxlFrameHeader **)&_swig_go_1; 
  
  result = (JxlDecoderStatus)JxlDecoderGetFrameHeader((JxlDecoderStruct const *)arg1,arg2);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_JxlDecoderGetFrameName_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0, _gostring_ _swig_go_1, long long _swig_go_2) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  JxlDecoderStatus result;
  intgo _swig_go_result;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (size_t)_swig_go_2; 
  
  result = (JxlDecoderStatus)JxlDecoderGetFrameName((JxlDecoderStruct const *)arg1,arg2,arg3);
  _swig_go_result = (intgo)result; 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_JxlDecoderImageOutBufferSize_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0, JxlPixelFormat *_swig_go_1, long long *_swig_go_2) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  JxlPixelFormat *arg2 = (JxlPixelFormat *) 0 ;
  size_t *arg3 = (size_t *) 0 ;
  JxlDecoderStatus result;
  intgo _swig_go_result;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  arg2 = *(JxlPixelFormat **)&_swig_go_1; 
  arg3 = *(size_t **)&_swig_go_2; 
  
  result = (JxlDecoderStatus)JxlDecoderImageOutBufferSize((JxlDecoderStruct const *)arg1,(JxlPixelFormat const *)arg2,arg3);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_JxlDecoderSetImageOutBuffer_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0, JxlPixelFormat *_swig_go_1, void *_swig_go_2, long long _swig_go_3) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  JxlPixelFormat *arg2 = (JxlPixelFormat *) 0 ;
  void *arg3 = (void *) 0 ;
  size_t arg4 ;
  JxlDecoderStatus result;
  intgo _swig_go_result;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  arg2 = *(JxlPixelFormat **)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (size_t)_swig_go_3; 
  
  result = (JxlDecoderStatus)JxlDecoderSetImageOutBuffer(arg1,(JxlPixelFormat const *)arg2,arg3,arg4);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_JxlDecoderSetImageOutCallback_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0, JxlPixelFormat *_swig_go_1, void* _swig_go_2, void *_swig_go_3) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  JxlPixelFormat *arg2 = (JxlPixelFormat *) 0 ;
  JxlImageOutCallback arg3 = (JxlImageOutCallback) 0 ;
  void *arg4 = (void *) 0 ;
  JxlDecoderStatus result;
  intgo _swig_go_result;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  arg2 = *(JxlPixelFormat **)&_swig_go_1; 
  arg3 = *(JxlImageOutCallback *)&_swig_go_2; 
  arg4 = *(void **)&_swig_go_3; 
  
  result = (JxlDecoderStatus)JxlDecoderSetImageOutCallback(arg1,(JxlPixelFormat const *)arg2,arg3,arg4);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_JxlDecoderExtraChannelBufferSize_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0, JxlPixelFormat *_swig_go_1, long long *_swig_go_2, intgo _swig_go_3) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  JxlPixelFormat *arg2 = (JxlPixelFormat *) 0 ;
  size_t *arg3 = (size_t *) 0 ;
  uint32_t arg4 ;
  JxlDecoderStatus result;
  intgo _swig_go_result;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  arg2 = *(JxlPixelFormat **)&_swig_go_1; 
  arg3 = *(size_t **)&_swig_go_2; 
  arg4 = (uint32_t)_swig_go_3; 
  
  result = (JxlDecoderStatus)JxlDecoderExtraChannelBufferSize((JxlDecoderStruct const *)arg1,(JxlPixelFormat const *)arg2,arg3,arg4);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_JxlDecoderSetExtraChannelBuffer_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0, JxlPixelFormat *_swig_go_1, void *_swig_go_2, long long _swig_go_3, intgo _swig_go_4) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  JxlPixelFormat *arg2 = (JxlPixelFormat *) 0 ;
  void *arg3 = (void *) 0 ;
  size_t arg4 ;
  uint32_t arg5 ;
  JxlDecoderStatus result;
  intgo _swig_go_result;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  arg2 = *(JxlPixelFormat **)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (size_t)_swig_go_3; 
  arg5 = (uint32_t)_swig_go_4; 
  
  result = (JxlDecoderStatus)JxlDecoderSetExtraChannelBuffer(arg1,(JxlPixelFormat const *)arg2,arg3,arg4,arg5);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_JxlDecoderSetJPEGBuffer_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0, char *_swig_go_1, long long _swig_go_2) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  uint8_t *arg2 = (uint8_t *) 0 ;
  size_t arg3 ;
  JxlDecoderStatus result;
  intgo _swig_go_result;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  arg2 = *(uint8_t **)&_swig_go_1; 
  arg3 = (size_t)_swig_go_2; 
  
  result = (JxlDecoderStatus)JxlDecoderSetJPEGBuffer(arg1,arg2,arg3);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


long long _wrap_JxlDecoderReleaseJPEGBuffer_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  
  result = JxlDecoderReleaseJPEGBuffer(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JxlDecoderFlushImage_glue_5245479e8dc75ce4(JxlDecoderStruct *_swig_go_0) {
  JxlDecoder *arg1 = (JxlDecoder *) 0 ;
  JxlDecoderStatus result;
  intgo _swig_go_result;
  
  arg1 = *(JxlDecoder **)&_swig_go_0; 
  
  result = (JxlDecoderStatus)JxlDecoderFlushImage(arg1);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_JXL_ORIENT_IDENTITY_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_ORIENT_IDENTITY;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_ORIENT_FLIP_HORIZONTAL_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_ORIENT_FLIP_HORIZONTAL;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_ORIENT_ROTATE_180_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_ORIENT_ROTATE_180;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_ORIENT_FLIP_VERTICAL_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_ORIENT_FLIP_VERTICAL;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_ORIENT_TRANSPOSE_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_ORIENT_TRANSPOSE;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_ORIENT_ROTATE_90_CW_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_ORIENT_ROTATE_90_CW;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_ORIENT_ANTI_TRANSPOSE_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_ORIENT_ANTI_TRANSPOSE;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_ORIENT_ROTATE_90_CCW_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_ORIENT_ROTATE_90_CCW;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_CHANNEL_ALPHA_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_CHANNEL_ALPHA;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_CHANNEL_DEPTH_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_CHANNEL_DEPTH;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_CHANNEL_SPOT_COLOR_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_CHANNEL_SPOT_COLOR;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_CHANNEL_SELECTION_MASK_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_CHANNEL_SELECTION_MASK;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_CHANNEL_BLACK_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_CHANNEL_BLACK;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_CHANNEL_CFA_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_CHANNEL_CFA;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_CHANNEL_THERMAL_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_CHANNEL_THERMAL;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_CHANNEL_RESERVED0_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_CHANNEL_RESERVED0;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_CHANNEL_RESERVED1_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_CHANNEL_RESERVED1;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_CHANNEL_RESERVED2_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_CHANNEL_RESERVED2;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_CHANNEL_RESERVED3_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_CHANNEL_RESERVED3;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_CHANNEL_RESERVED4_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_CHANNEL_RESERVED4;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_CHANNEL_RESERVED5_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_CHANNEL_RESERVED5;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_CHANNEL_RESERVED6_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_CHANNEL_RESERVED6;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_CHANNEL_RESERVED7_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_CHANNEL_RESERVED7;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_CHANNEL_UNKNOWN_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_CHANNEL_UNKNOWN;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_JXL_CHANNEL_OPTIONAL_glue_5245479e8dc75ce4() {
  int result;
  intgo _swig_go_result;
  
  
  result = JXL_CHANNEL_OPTIONAL;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlPreviewHeader_xsize_set_glue_5245479e8dc75ce4(JxlPreviewHeader *_swig_go_0, intgo _swig_go_1) {
  JxlPreviewHeader *arg1 = (JxlPreviewHeader *) 0 ;
  uint32_t arg2 ;
  
  arg1 = *(JxlPreviewHeader **)&_swig_go_0; 
  arg2 = (uint32_t)_swig_go_1; 
  
  if (arg1) (arg1)->xsize = arg2;
  
}


intgo _wrap_JxlPreviewHeader_xsize_get_glue_5245479e8dc75ce4(JxlPreviewHeader *_swig_go_0) {
  JxlPreviewHeader *arg1 = (JxlPreviewHeader *) 0 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = *(JxlPreviewHeader **)&_swig_go_0; 
  
  result = (uint32_t) ((arg1)->xsize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlPreviewHeader_ysize_set_glue_5245479e8dc75ce4(JxlPreviewHeader *_swig_go_0, intgo _swig_go_1) {
  JxlPreviewHeader *arg1 = (JxlPreviewHeader *) 0 ;
  uint32_t arg2 ;
  
  arg1 = *(JxlPreviewHeader **)&_swig_go_0; 
  arg2 = (uint32_t)_swig_go_1; 
  
  if (arg1) (arg1)->ysize = arg2;
  
}


intgo _wrap_JxlPreviewHeader_ysize_get_glue_5245479e8dc75ce4(JxlPreviewHeader *_swig_go_0) {
  JxlPreviewHeader *arg1 = (JxlPreviewHeader *) 0 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = *(JxlPreviewHeader **)&_swig_go_0; 
  
  result = (uint32_t) ((arg1)->ysize);
  _swig_go_result = result; 
  return _swig_go_result;
}


JxlPreviewHeader *_wrap_new_JxlPreviewHeader_glue_5245479e8dc75ce4() {
  JxlPreviewHeader *result = 0 ;
  JxlPreviewHeader *_swig_go_result;
  
  
  result = (JxlPreviewHeader *)new JxlPreviewHeader();
  *(JxlPreviewHeader **)&_swig_go_result = (JxlPreviewHeader *)result; 
  return _swig_go_result;
}


void _wrap_delete_JxlPreviewHeader_glue_5245479e8dc75ce4(JxlPreviewHeader *_swig_go_0) {
  JxlPreviewHeader *arg1 = (JxlPreviewHeader *) 0 ;
  
  arg1 = *(JxlPreviewHeader **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_JxlAnimationHeader_tps_numerator_set_glue_5245479e8dc75ce4(JxlAnimationHeader *_swig_go_0, intgo _swig_go_1) {
  JxlAnimationHeader *arg1 = (JxlAnimationHeader *) 0 ;
  uint32_t arg2 ;
  
  arg1 = *(JxlAnimationHeader **)&_swig_go_0; 
  arg2 = (uint32_t)_swig_go_1; 
  
  if (arg1) (arg1)->tps_numerator = arg2;
  
}


intgo _wrap_JxlAnimationHeader_tps_numerator_get_glue_5245479e8dc75ce4(JxlAnimationHeader *_swig_go_0) {
  JxlAnimationHeader *arg1 = (JxlAnimationHeader *) 0 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = *(JxlAnimationHeader **)&_swig_go_0; 
  
  result = (uint32_t) ((arg1)->tps_numerator);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlAnimationHeader_tps_denominator_set_glue_5245479e8dc75ce4(JxlAnimationHeader *_swig_go_0, intgo _swig_go_1) {
  JxlAnimationHeader *arg1 = (JxlAnimationHeader *) 0 ;
  uint32_t arg2 ;
  
  arg1 = *(JxlAnimationHeader **)&_swig_go_0; 
  arg2 = (uint32_t)_swig_go_1; 
  
  if (arg1) (arg1)->tps_denominator = arg2;
  
}


intgo _wrap_JxlAnimationHeader_tps_denominator_get_glue_5245479e8dc75ce4(JxlAnimationHeader *_swig_go_0) {
  JxlAnimationHeader *arg1 = (JxlAnimationHeader *) 0 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = *(JxlAnimationHeader **)&_swig_go_0; 
  
  result = (uint32_t) ((arg1)->tps_denominator);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlAnimationHeader_num_loops_set_glue_5245479e8dc75ce4(JxlAnimationHeader *_swig_go_0, intgo _swig_go_1) {
  JxlAnimationHeader *arg1 = (JxlAnimationHeader *) 0 ;
  uint32_t arg2 ;
  
  arg1 = *(JxlAnimationHeader **)&_swig_go_0; 
  arg2 = (uint32_t)_swig_go_1; 
  
  if (arg1) (arg1)->num_loops = arg2;
  
}


intgo _wrap_JxlAnimationHeader_num_loops_get_glue_5245479e8dc75ce4(JxlAnimationHeader *_swig_go_0) {
  JxlAnimationHeader *arg1 = (JxlAnimationHeader *) 0 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = *(JxlAnimationHeader **)&_swig_go_0; 
  
  result = (uint32_t) ((arg1)->num_loops);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlAnimationHeader_have_timecodes_set_glue_5245479e8dc75ce4(JxlAnimationHeader *_swig_go_0, intgo _swig_go_1) {
  JxlAnimationHeader *arg1 = (JxlAnimationHeader *) 0 ;
  int arg2 ;
  
  arg1 = *(JxlAnimationHeader **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->have_timecodes = arg2;
  
}


intgo _wrap_JxlAnimationHeader_have_timecodes_get_glue_5245479e8dc75ce4(JxlAnimationHeader *_swig_go_0) {
  JxlAnimationHeader *arg1 = (JxlAnimationHeader *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(JxlAnimationHeader **)&_swig_go_0; 
  
  result = (int) ((arg1)->have_timecodes);
  _swig_go_result = result; 
  return _swig_go_result;
}


JxlAnimationHeader *_wrap_new_JxlAnimationHeader_glue_5245479e8dc75ce4() {
  JxlAnimationHeader *result = 0 ;
  JxlAnimationHeader *_swig_go_result;
  
  
  result = (JxlAnimationHeader *)new JxlAnimationHeader();
  *(JxlAnimationHeader **)&_swig_go_result = (JxlAnimationHeader *)result; 
  return _swig_go_result;
}


void _wrap_delete_JxlAnimationHeader_glue_5245479e8dc75ce4(JxlAnimationHeader *_swig_go_0) {
  JxlAnimationHeader *arg1 = (JxlAnimationHeader *) 0 ;
  
  arg1 = *(JxlAnimationHeader **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_JxlBasicInfo_have_container_set_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0, intgo _swig_go_1) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  int arg2 ;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->have_container = arg2;
  
}


intgo _wrap_JxlBasicInfo_have_container_get_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  
  result = (int) ((arg1)->have_container);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlBasicInfo_xsize_set_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0, intgo _swig_go_1) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  uint32_t arg2 ;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  arg2 = (uint32_t)_swig_go_1; 
  
  if (arg1) (arg1)->xsize = arg2;
  
}


intgo _wrap_JxlBasicInfo_xsize_get_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  
  result = (uint32_t) ((arg1)->xsize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlBasicInfo_ysize_set_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0, intgo _swig_go_1) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  uint32_t arg2 ;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  arg2 = (uint32_t)_swig_go_1; 
  
  if (arg1) (arg1)->ysize = arg2;
  
}


intgo _wrap_JxlBasicInfo_ysize_get_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  
  result = (uint32_t) ((arg1)->ysize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlBasicInfo_bits_per_sample_set_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0, intgo _swig_go_1) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  uint32_t arg2 ;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  arg2 = (uint32_t)_swig_go_1; 
  
  if (arg1) (arg1)->bits_per_sample = arg2;
  
}


intgo _wrap_JxlBasicInfo_bits_per_sample_get_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  
  result = (uint32_t) ((arg1)->bits_per_sample);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlBasicInfo_exponent_bits_per_sample_set_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0, intgo _swig_go_1) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  uint32_t arg2 ;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  arg2 = (uint32_t)_swig_go_1; 
  
  if (arg1) (arg1)->exponent_bits_per_sample = arg2;
  
}


intgo _wrap_JxlBasicInfo_exponent_bits_per_sample_get_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  
  result = (uint32_t) ((arg1)->exponent_bits_per_sample);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlBasicInfo_intensity_target_set_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0, float _swig_go_1) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  float arg2 ;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->intensity_target = arg2;
  
}


float _wrap_JxlBasicInfo_intensity_target_get_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  
  result = (float) ((arg1)->intensity_target);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlBasicInfo_min_nits_set_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0, float _swig_go_1) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  float arg2 ;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->min_nits = arg2;
  
}


float _wrap_JxlBasicInfo_min_nits_get_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  
  result = (float) ((arg1)->min_nits);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlBasicInfo_relative_to_max_display_set_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0, intgo _swig_go_1) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  int arg2 ;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->relative_to_max_display = arg2;
  
}


intgo _wrap_JxlBasicInfo_relative_to_max_display_get_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  
  result = (int) ((arg1)->relative_to_max_display);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlBasicInfo_linear_below_set_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0, float _swig_go_1) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  float arg2 ;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->linear_below = arg2;
  
}


float _wrap_JxlBasicInfo_linear_below_get_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  
  result = (float) ((arg1)->linear_below);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlBasicInfo_uses_original_profile_set_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0, intgo _swig_go_1) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  int arg2 ;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->uses_original_profile = arg2;
  
}


intgo _wrap_JxlBasicInfo_uses_original_profile_get_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  
  result = (int) ((arg1)->uses_original_profile);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlBasicInfo_have_preview_set_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0, intgo _swig_go_1) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  int arg2 ;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->have_preview = arg2;
  
}


intgo _wrap_JxlBasicInfo_have_preview_get_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  
  result = (int) ((arg1)->have_preview);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlBasicInfo_have_animation_set_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0, intgo _swig_go_1) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  int arg2 ;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->have_animation = arg2;
  
}


intgo _wrap_JxlBasicInfo_have_animation_get_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  
  result = (int) ((arg1)->have_animation);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlBasicInfo_orientation_set_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0, intgo _swig_go_1) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  JxlOrientation arg2 ;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  arg2 = (JxlOrientation)_swig_go_1; 
  
  if (arg1) (arg1)->orientation = arg2;
  
}


intgo _wrap_JxlBasicInfo_orientation_get_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  JxlOrientation result;
  intgo _swig_go_result;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  
  result = (JxlOrientation) ((arg1)->orientation);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_JxlBasicInfo_num_color_channels_set_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0, intgo _swig_go_1) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  uint32_t arg2 ;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  arg2 = (uint32_t)_swig_go_1; 
  
  if (arg1) (arg1)->num_color_channels = arg2;
  
}


intgo _wrap_JxlBasicInfo_num_color_channels_get_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  
  result = (uint32_t) ((arg1)->num_color_channels);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlBasicInfo_num_extra_channels_set_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0, intgo _swig_go_1) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  uint32_t arg2 ;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  arg2 = (uint32_t)_swig_go_1; 
  
  if (arg1) (arg1)->num_extra_channels = arg2;
  
}


intgo _wrap_JxlBasicInfo_num_extra_channels_get_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  
  result = (uint32_t) ((arg1)->num_extra_channels);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlBasicInfo_alpha_bits_set_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0, intgo _swig_go_1) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  uint32_t arg2 ;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  arg2 = (uint32_t)_swig_go_1; 
  
  if (arg1) (arg1)->alpha_bits = arg2;
  
}


intgo _wrap_JxlBasicInfo_alpha_bits_get_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  
  result = (uint32_t) ((arg1)->alpha_bits);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlBasicInfo_alpha_exponent_bits_set_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0, intgo _swig_go_1) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  uint32_t arg2 ;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  arg2 = (uint32_t)_swig_go_1; 
  
  if (arg1) (arg1)->alpha_exponent_bits = arg2;
  
}


intgo _wrap_JxlBasicInfo_alpha_exponent_bits_get_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  
  result = (uint32_t) ((arg1)->alpha_exponent_bits);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlBasicInfo_alpha_premultiplied_set_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0, intgo _swig_go_1) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  int arg2 ;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->alpha_premultiplied = arg2;
  
}


intgo _wrap_JxlBasicInfo_alpha_premultiplied_get_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  
  result = (int) ((arg1)->alpha_premultiplied);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlBasicInfo_preview_set_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0, JxlPreviewHeader *_swig_go_1) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  JxlPreviewHeader *arg2 = (JxlPreviewHeader *) 0 ;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  arg2 = *(JxlPreviewHeader **)&_swig_go_1; 
  
  if (arg1) (arg1)->preview = *arg2;
  
}


JxlPreviewHeader *_wrap_JxlBasicInfo_preview_get_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  JxlPreviewHeader *result = 0 ;
  JxlPreviewHeader *_swig_go_result;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  
  result = (JxlPreviewHeader *)& ((arg1)->preview);
  *(JxlPreviewHeader **)&_swig_go_result = (JxlPreviewHeader *)result; 
  return _swig_go_result;
}


void _wrap_JxlBasicInfo_animation_set_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0, JxlAnimationHeader *_swig_go_1) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  JxlAnimationHeader *arg2 = (JxlAnimationHeader *) 0 ;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  arg2 = *(JxlAnimationHeader **)&_swig_go_1; 
  
  if (arg1) (arg1)->animation = *arg2;
  
}


JxlAnimationHeader *_wrap_JxlBasicInfo_animation_get_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  JxlAnimationHeader *result = 0 ;
  JxlAnimationHeader *_swig_go_result;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  
  result = (JxlAnimationHeader *)& ((arg1)->animation);
  *(JxlAnimationHeader **)&_swig_go_result = (JxlAnimationHeader *)result; 
  return _swig_go_result;
}


void _wrap_JxlBasicInfo_padding_set_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0, char *_swig_go_1) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  uint8_t *arg2 ;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  arg2 = *(uint8_t **)&_swig_go_1; 
  
  {
    size_t ii;
    uint8_t *b = (uint8_t *) arg1->padding;
    for (ii = 0; ii < (size_t)108; ii++) b[ii] = *((uint8_t *) arg2 + ii);
  }
  
}


char *_wrap_JxlBasicInfo_padding_get_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  uint8_t *result = 0 ;
  char *_swig_go_result;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  
  result = (uint8_t *)(uint8_t *) ((arg1)->padding);
  *(uint8_t **)&_swig_go_result = result; 
  return _swig_go_result;
}


JxlBasicInfo *_wrap_new_JxlBasicInfo_glue_5245479e8dc75ce4() {
  JxlBasicInfo *result = 0 ;
  JxlBasicInfo *_swig_go_result;
  
  
  result = (JxlBasicInfo *)new JxlBasicInfo();
  *(JxlBasicInfo **)&_swig_go_result = (JxlBasicInfo *)result; 
  return _swig_go_result;
}


void _wrap_delete_JxlBasicInfo_glue_5245479e8dc75ce4(JxlBasicInfo *_swig_go_0) {
  JxlBasicInfo *arg1 = (JxlBasicInfo *) 0 ;
  
  arg1 = *(JxlBasicInfo **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_JxlExtraChannelInfo_Xtype_set_glue_5245479e8dc75ce4(JxlExtraChannelInfo *_swig_go_0, intgo _swig_go_1) {
  JxlExtraChannelInfo *arg1 = (JxlExtraChannelInfo *) 0 ;
  JxlExtraChannelType arg2 ;
  
  arg1 = *(JxlExtraChannelInfo **)&_swig_go_0; 
  arg2 = (JxlExtraChannelType)_swig_go_1; 
  
  if (arg1) (arg1)->type = arg2;
  
}


intgo _wrap_JxlExtraChannelInfo_Xtype_get_glue_5245479e8dc75ce4(JxlExtraChannelInfo *_swig_go_0) {
  JxlExtraChannelInfo *arg1 = (JxlExtraChannelInfo *) 0 ;
  JxlExtraChannelType result;
  intgo _swig_go_result;
  
  arg1 = *(JxlExtraChannelInfo **)&_swig_go_0; 
  
  result = (JxlExtraChannelType) ((arg1)->type);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_JxlExtraChannelInfo_bits_per_sample_set_glue_5245479e8dc75ce4(JxlExtraChannelInfo *_swig_go_0, intgo _swig_go_1) {
  JxlExtraChannelInfo *arg1 = (JxlExtraChannelInfo *) 0 ;
  uint32_t arg2 ;
  
  arg1 = *(JxlExtraChannelInfo **)&_swig_go_0; 
  arg2 = (uint32_t)_swig_go_1; 
  
  if (arg1) (arg1)->bits_per_sample = arg2;
  
}


intgo _wrap_JxlExtraChannelInfo_bits_per_sample_get_glue_5245479e8dc75ce4(JxlExtraChannelInfo *_swig_go_0) {
  JxlExtraChannelInfo *arg1 = (JxlExtraChannelInfo *) 0 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = *(JxlExtraChannelInfo **)&_swig_go_0; 
  
  result = (uint32_t) ((arg1)->bits_per_sample);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlExtraChannelInfo_exponent_bits_per_sample_set_glue_5245479e8dc75ce4(JxlExtraChannelInfo *_swig_go_0, intgo _swig_go_1) {
  JxlExtraChannelInfo *arg1 = (JxlExtraChannelInfo *) 0 ;
  uint32_t arg2 ;
  
  arg1 = *(JxlExtraChannelInfo **)&_swig_go_0; 
  arg2 = (uint32_t)_swig_go_1; 
  
  if (arg1) (arg1)->exponent_bits_per_sample = arg2;
  
}


intgo _wrap_JxlExtraChannelInfo_exponent_bits_per_sample_get_glue_5245479e8dc75ce4(JxlExtraChannelInfo *_swig_go_0) {
  JxlExtraChannelInfo *arg1 = (JxlExtraChannelInfo *) 0 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = *(JxlExtraChannelInfo **)&_swig_go_0; 
  
  result = (uint32_t) ((arg1)->exponent_bits_per_sample);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlExtraChannelInfo_dim_shift_set_glue_5245479e8dc75ce4(JxlExtraChannelInfo *_swig_go_0, intgo _swig_go_1) {
  JxlExtraChannelInfo *arg1 = (JxlExtraChannelInfo *) 0 ;
  uint32_t arg2 ;
  
  arg1 = *(JxlExtraChannelInfo **)&_swig_go_0; 
  arg2 = (uint32_t)_swig_go_1; 
  
  if (arg1) (arg1)->dim_shift = arg2;
  
}


intgo _wrap_JxlExtraChannelInfo_dim_shift_get_glue_5245479e8dc75ce4(JxlExtraChannelInfo *_swig_go_0) {
  JxlExtraChannelInfo *arg1 = (JxlExtraChannelInfo *) 0 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = *(JxlExtraChannelInfo **)&_swig_go_0; 
  
  result = (uint32_t) ((arg1)->dim_shift);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlExtraChannelInfo_name_length_set_glue_5245479e8dc75ce4(JxlExtraChannelInfo *_swig_go_0, intgo _swig_go_1) {
  JxlExtraChannelInfo *arg1 = (JxlExtraChannelInfo *) 0 ;
  uint32_t arg2 ;
  
  arg1 = *(JxlExtraChannelInfo **)&_swig_go_0; 
  arg2 = (uint32_t)_swig_go_1; 
  
  if (arg1) (arg1)->name_length = arg2;
  
}


intgo _wrap_JxlExtraChannelInfo_name_length_get_glue_5245479e8dc75ce4(JxlExtraChannelInfo *_swig_go_0) {
  JxlExtraChannelInfo *arg1 = (JxlExtraChannelInfo *) 0 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = *(JxlExtraChannelInfo **)&_swig_go_0; 
  
  result = (uint32_t) ((arg1)->name_length);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlExtraChannelInfo_alpha_premultiplied_set_glue_5245479e8dc75ce4(JxlExtraChannelInfo *_swig_go_0, intgo _swig_go_1) {
  JxlExtraChannelInfo *arg1 = (JxlExtraChannelInfo *) 0 ;
  int arg2 ;
  
  arg1 = *(JxlExtraChannelInfo **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->alpha_premultiplied = arg2;
  
}


intgo _wrap_JxlExtraChannelInfo_alpha_premultiplied_get_glue_5245479e8dc75ce4(JxlExtraChannelInfo *_swig_go_0) {
  JxlExtraChannelInfo *arg1 = (JxlExtraChannelInfo *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(JxlExtraChannelInfo **)&_swig_go_0; 
  
  result = (int) ((arg1)->alpha_premultiplied);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlExtraChannelInfo_spot_color_set_glue_5245479e8dc75ce4(JxlExtraChannelInfo *_swig_go_0, float *_swig_go_1) {
  JxlExtraChannelInfo *arg1 = (JxlExtraChannelInfo *) 0 ;
  float *arg2 ;
  
  arg1 = *(JxlExtraChannelInfo **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->spot_color;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_JxlExtraChannelInfo_spot_color_get_glue_5245479e8dc75ce4(JxlExtraChannelInfo *_swig_go_0) {
  JxlExtraChannelInfo *arg1 = (JxlExtraChannelInfo *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(JxlExtraChannelInfo **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->spot_color);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlExtraChannelInfo_cfa_channel_set_glue_5245479e8dc75ce4(JxlExtraChannelInfo *_swig_go_0, intgo _swig_go_1) {
  JxlExtraChannelInfo *arg1 = (JxlExtraChannelInfo *) 0 ;
  uint32_t arg2 ;
  
  arg1 = *(JxlExtraChannelInfo **)&_swig_go_0; 
  arg2 = (uint32_t)_swig_go_1; 
  
  if (arg1) (arg1)->cfa_channel = arg2;
  
}


intgo _wrap_JxlExtraChannelInfo_cfa_channel_get_glue_5245479e8dc75ce4(JxlExtraChannelInfo *_swig_go_0) {
  JxlExtraChannelInfo *arg1 = (JxlExtraChannelInfo *) 0 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = *(JxlExtraChannelInfo **)&_swig_go_0; 
  
  result = (uint32_t) ((arg1)->cfa_channel);
  _swig_go_result = result; 
  return _swig_go_result;
}


JxlExtraChannelInfo *_wrap_new_JxlExtraChannelInfo_glue_5245479e8dc75ce4() {
  JxlExtraChannelInfo *result = 0 ;
  JxlExtraChannelInfo *_swig_go_result;
  
  
  result = (JxlExtraChannelInfo *)new JxlExtraChannelInfo();
  *(JxlExtraChannelInfo **)&_swig_go_result = (JxlExtraChannelInfo *)result; 
  return _swig_go_result;
}


void _wrap_delete_JxlExtraChannelInfo_glue_5245479e8dc75ce4(JxlExtraChannelInfo *_swig_go_0) {
  JxlExtraChannelInfo *arg1 = (JxlExtraChannelInfo *) 0 ;
  
  arg1 = *(JxlExtraChannelInfo **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_JxlHeaderExtensions_extensions_set_glue_5245479e8dc75ce4(JxlHeaderExtensions *_swig_go_0, long long _swig_go_1) {
  JxlHeaderExtensions *arg1 = (JxlHeaderExtensions *) 0 ;
  uint64_t arg2 ;
  
  arg1 = *(JxlHeaderExtensions **)&_swig_go_0; 
  arg2 = (uint64_t)_swig_go_1; 
  
  if (arg1) (arg1)->extensions = arg2;
  
}


long long _wrap_JxlHeaderExtensions_extensions_get_glue_5245479e8dc75ce4(JxlHeaderExtensions *_swig_go_0) {
  JxlHeaderExtensions *arg1 = (JxlHeaderExtensions *) 0 ;
  uint64_t result;
  long long _swig_go_result;
  
  arg1 = *(JxlHeaderExtensions **)&_swig_go_0; 
  
  result = (uint64_t) ((arg1)->extensions);
  _swig_go_result = result; 
  return _swig_go_result;
}


JxlHeaderExtensions *_wrap_new_JxlHeaderExtensions_glue_5245479e8dc75ce4() {
  JxlHeaderExtensions *result = 0 ;
  JxlHeaderExtensions *_swig_go_result;
  
  
  result = (JxlHeaderExtensions *)new JxlHeaderExtensions();
  *(JxlHeaderExtensions **)&_swig_go_result = (JxlHeaderExtensions *)result; 
  return _swig_go_result;
}


void _wrap_delete_JxlHeaderExtensions_glue_5245479e8dc75ce4(JxlHeaderExtensions *_swig_go_0) {
  JxlHeaderExtensions *arg1 = (JxlHeaderExtensions *) 0 ;
  
  arg1 = *(JxlHeaderExtensions **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_JxlFrameHeader_duration_set_glue_5245479e8dc75ce4(JxlFrameHeader *_swig_go_0, intgo _swig_go_1) {
  JxlFrameHeader *arg1 = (JxlFrameHeader *) 0 ;
  uint32_t arg2 ;
  
  arg1 = *(JxlFrameHeader **)&_swig_go_0; 
  arg2 = (uint32_t)_swig_go_1; 
  
  if (arg1) (arg1)->duration = arg2;
  
}


intgo _wrap_JxlFrameHeader_duration_get_glue_5245479e8dc75ce4(JxlFrameHeader *_swig_go_0) {
  JxlFrameHeader *arg1 = (JxlFrameHeader *) 0 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = *(JxlFrameHeader **)&_swig_go_0; 
  
  result = (uint32_t) ((arg1)->duration);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlFrameHeader_timecode_set_glue_5245479e8dc75ce4(JxlFrameHeader *_swig_go_0, intgo _swig_go_1) {
  JxlFrameHeader *arg1 = (JxlFrameHeader *) 0 ;
  uint32_t arg2 ;
  
  arg1 = *(JxlFrameHeader **)&_swig_go_0; 
  arg2 = (uint32_t)_swig_go_1; 
  
  if (arg1) (arg1)->timecode = arg2;
  
}


intgo _wrap_JxlFrameHeader_timecode_get_glue_5245479e8dc75ce4(JxlFrameHeader *_swig_go_0) {
  JxlFrameHeader *arg1 = (JxlFrameHeader *) 0 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = *(JxlFrameHeader **)&_swig_go_0; 
  
  result = (uint32_t) ((arg1)->timecode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlFrameHeader_name_length_set_glue_5245479e8dc75ce4(JxlFrameHeader *_swig_go_0, intgo _swig_go_1) {
  JxlFrameHeader *arg1 = (JxlFrameHeader *) 0 ;
  uint32_t arg2 ;
  
  arg1 = *(JxlFrameHeader **)&_swig_go_0; 
  arg2 = (uint32_t)_swig_go_1; 
  
  if (arg1) (arg1)->name_length = arg2;
  
}


intgo _wrap_JxlFrameHeader_name_length_get_glue_5245479e8dc75ce4(JxlFrameHeader *_swig_go_0) {
  JxlFrameHeader *arg1 = (JxlFrameHeader *) 0 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = *(JxlFrameHeader **)&_swig_go_0; 
  
  result = (uint32_t) ((arg1)->name_length);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JxlFrameHeader_is_last_set_glue_5245479e8dc75ce4(JxlFrameHeader *_swig_go_0, intgo _swig_go_1) {
  JxlFrameHeader *arg1 = (JxlFrameHeader *) 0 ;
  int arg2 ;
  
  arg1 = *(JxlFrameHeader **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->is_last = arg2;
  
}


intgo _wrap_JxlFrameHeader_is_last_get_glue_5245479e8dc75ce4(JxlFrameHeader *_swig_go_0) {
  JxlFrameHeader *arg1 = (JxlFrameHeader *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(JxlFrameHeader **)&_swig_go_0; 
  
  result = (int) ((arg1)->is_last);
  _swig_go_result = result; 
  return _swig_go_result;
}


JxlFrameHeader *_wrap_new_JxlFrameHeader_glue_5245479e8dc75ce4() {
  JxlFrameHeader *result = 0 ;
  JxlFrameHeader *_swig_go_result;
  
  
  result = (JxlFrameHeader *)new JxlFrameHeader();
  *(JxlFrameHeader **)&_swig_go_result = (JxlFrameHeader *)result; 
  return _swig_go_result;
}


void _wrap_delete_JxlFrameHeader_glue_5245479e8dc75ce4(JxlFrameHeader *_swig_go_0) {
  JxlFrameHeader *arg1 = (JxlFrameHeader *) 0 ;
  
  arg1 = *(JxlFrameHeader **)&_swig_go_0; 
  
  delete arg1;
  
}


#ifdef __cplusplus
}
#endif

